#!/usr/bin/env zsh

function __source_mac_pre(){
    # init Homebrew
    if [ "$(arch)" = "arm64" ]; then
        eval "$(/opt/homebrew/bin/brew shellenv)"
    else
        # emulate arch -x86_64 zsh on arm64
        eval "$(/usr/local/bin/brew shellenv)"
        WINEPREFIX=~/my-game-prefix
        # $(brew --prefix game-porting-toolkit)/bin/wine64 winecfg
    fi

    # Zsh syntax highlighting
    if test -f "$(brew --prefix)"/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh; then
        source "$(brew --prefix)"/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
    fi

}

function __source_mac_post(){
    command -v fzf &> /dev/null && FZF_VERSION=$(fzf --version | awk '{print $1}')
    if test -n "$FZF_VERSION"; then
        source /opt/homebrew/Cellar/fzf/$FZF_VERSION/shell/completion.zsh
        source /opt/homebrew/Cellar/fzf/$FZF_VERSION/shell/key-bindings.zsh
    fi
    export GIT_EXTERNAL_DIFF="/opt/homebrew/bin/difft"

}

function __source_arch_linux_pre(){
    if test -f /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh; then
        source /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
    fi
}

function __source_archlinux_post(){
    if test -f /usr/share/fzf/key-bindings.zsh; then
        source /usr/share/fzf/key-bindings.zsh
    fi
    if test -f /usr/share/fzf/completion.zsh; then
        source /usr/share/fzf/completion.zsh
    fi
    if test -f ~/.fzf.zsh; then
        source ~/.fzf.zsh
    fi

}

function __source_ubuntu_pre(){
    if test -f /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh; then
        source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
    fi

}
function __source_ubuntu_post(){
    export LUA_PATH="/usr/local/share/lua/5.1/?.lua;/usr/share/lua/5.1/?.lua;;"
    export LUA_CPATH="/usr/local/lib/lua/5.1/?.so;/usr/lib/lua/5.1/?.so;;"
    export PATH="/home/brenden/perl5/bin:${PATH}";
    PERL5LIB="/home/brenden/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
    PERL_LOCAL_LIB_ROOT="/home/brenden/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
    PERL_MB_OPT="--install_base \"/home/brenden/perl5\""; export PERL_MB_OPT;
    PERL_MM_OPT="INSTALL_BASE=/home/brenden/perl5"; export PERL_MM_OPT;
    export GIT_EXTERNAL_DIFF="$HOME/.cargo/bin/difft"
    export PYENV_ROOT="$HOME/.pyenv"
    [[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init -)"
    eval "$(pyenv virtualenv-init -)"
}

if test -f ~/.fzf.zsh; then
    source ~/.fzf.zsh
fi

# Source custom dotfiles  -  sourced individually to ensure exports.zsh sourced nearly first.
if [ -d ~/.dotfiles/zsh ]; then
    source ~/.dotfiles/zsh/private_functions.zsh
    source ~/.dotfiles/zsh/exports.zsh
    if __is_mac; then
        __source_mac_pre
    elif __is_arch_linux; then
        __source_arch_pre
    elif __is_ubuntu; then
        __source_ubuntu_pre
    fi
    source ~/.dotfiles/zsh/aliases.zsh
    source ~/.dotfiles/zsh/script-aliases.zsh
    source ~/.dotfiles/zsh/functions.zsh
    # source ~/.dotfiles/zsh/toomah-functions.zsh
    source ~/.dotfiles/zsh/wrapper-functions.zsh
    source ~/.dotfiles/zsh/private_functions.zsh  # re-source this so private_functions can access aliases, exports and functions circular-ly.
    source ~/.dotfiles/zsh/setopts.zsh
    source ~/.dotfiles/zsh/completions.zsh
    source ~/.dotfiles/zsh/zstyle.zsh
    source ~/.dotfiles/zsh/keybinds.zsh
    source ~/.dotfiles/zsh/hooks.zsh
    source ~/.dotfiles/zsh/prompt.zsh

    # Source plugins
    source ~/.dotfiles/zsh/plugins/nvm.sh

    # Custom function calls
    if __is_mac; then
        mail -e && info "You have mail!"
    fi
    mkquickcd

    if __is_mac; then
        __source_mac_post
    elif __is_arch_linux; then
        __source_arch_post
    elif __is_ubuntu; then
        __source_ubuntu_post
    fi

    # NOTE: The order of when this is evaluated is very important!!!
    # typeset -U PATH path # Remove any duplicates in $PATH. Keep $PATH explicit for cross system compatibility reasons.

    if __is_in_tmux; then
        source ~/.dotfiles/zsh/aliases.zsh
        source ~/.dotfiles/zsh/wrapper-functions.zsh
    fi

    # Custom script calls   -   Use subshell to silence background job output annoyance.
    # (bash $DOTFILES_DIR/scripts/check-connection.sh &)
    # (bash $DOTFILES_DIR/scripts/ls-prs.sh &)
    #
    if test -f $HOME/.dotfiles/zsh/work.sh; then
        source $HOME/.dotfiles/zsh/work.sh
    else
        ve --activate
    fi
fi
